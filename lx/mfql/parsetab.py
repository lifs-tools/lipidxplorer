
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDIFFIFAARROWleftEQUALSNEnonassocLTGTGELEARROWRleftPLUSMINUSleftTIMESDIVIDEleftNOTrightUMINUSAND ARROW ARROWR AS CHG COMMA DA DBR DEFINE DIVIDE DOT EQUALS FLOAT GE GT ID IDENTIFY IFA IFF IN INTEGER IS LBRACE LBRACKET LE LPAREN LT MASSRANGE MAXOCC MINOCC MINUS MS1 MS2 NE NEUTRALLOSS NOT OR PERCENT PLUS PPM QUERYNAME RBRACE RBRACKET REPORT RES RPAREN SEMICOLON SFSTRING STRING SUCHTHAT TIMES TOLERANCE WHERE WITHprogram  : program script SEMICOLONprogram  : script SEMICOLONscript  : scriptname variables identification\n    | identificationscript : error variables identificationscriptname : QUERYNAME IS getQueryName SEMICOLONgetQueryName : IDvariables : variables varvariables : varvar : DEFINE ID IS object options SEMICOLON\n    | DEFINE ID IS object options AS NEUTRALLOSS SEMICOLONvar : DEFINE ID options SEMICOLONobject : withAttrobject : onlyObjonlyObj : ID LBRACE ID RBRACEonlyObj : IDonlyObj : listonlyObj : varcontentonlyObj : ID LPAREN arguments RPAREN LBRACE ID RBRACEonlyObj : ID LPAREN arguments RPARENwithAttr : ID DOT ID LBRACE ID RBRACEwithAttr : ID DOT ID LBRACE STRING RBRACEwithAttr : ID DOT IDwithAttr : varcontent DOT IDwithAttr : list DOT IDarguments :arguments : expressionarguments : arguments COMMA expressionlist : LBRACKET listcontent RBRACKETlistcontent : listcontent COMMA objectlistcontent : objectvarcontent : tolerancetypevarcontent : FLOATvarcontent : INTEGER\n    | PLUS INTEGER\n    | MINUS INTEGERvarcontent : STRINGvarcontent : SFSTRINGoptions : WITH optioncontentoptions :optioncontent : optioncontent COMMA optionentryoptioncontent : optionentryoptionentry : DBR IS LPAREN object COMMA object RPARENoptionentry : CHG IS INTEGERoptionentry : MASSRANGE IS LPAREN object COMMA object RPARENoptionentry : MINOCC IS objectoptionentry : MAXOCC IS objectoptionentry : TOLERANCE IS tolerancetypetolerancetype : FLOAT DA\n    | FLOAT PPM\n    | INTEGER DA\n    | INTEGER RES\n    | INTEGER PPMidentification : IDENTIFY tagname WHERE marks evalMarks suchthat REPORT report\n    | IDENTIFY tagname WHERE marks evalMarks REPORT reportidentification : IDENTIFY marks evalMarks suchthat REPORT report\n    | IDENTIFY marks evalMarks REPORT reporttagname : IDmarks : boolmarksboolmarks : LPAREN boolmarks RPARENboolmarks : NOT boolmarksboolmarks : boolmarks OR boolmarksboolmarks : boolmarks AND boolmarksboolmarks : boolmarks IFA boolmarksboolmarks : boolmarks IFF boolmarksboolmarks : boolmarks ARROW boolmarksboolmarks : boolmarks LE boolmarksboolmarks : scanevalMarks :suchthat : SUCHTHAT bodybody : btermbterm : booleantermbooleanterm : booleanterm AND booleanterm\n    | booleanterm OR  booleantermbooleanterm : LPAREN booleanterm RPARENbooleanterm : NOT booleantermbooleanterm : exprbooleanterm : objectexpr : expression EQUALS expression options\n    | expression GT expression options\n    | expression GE expression options\n    | expression LE expression options\n    | expression LT expression options\n    | expression NE expression options\n    | expression ARROWR expression optionsexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | MINUS expression %prec UMINUSexpression : LPAREN expression RPAREN LBRACE ID RBRACEexpression : LPAREN expression RPARENexpression : objectscan : object IN scope optionsscope : MS1 MINUS\n    | MS1 PLUS\n    | MS2 PLUS\n    | MS2 MINUSreport : reportContentreportContent : reportContent rContentreportContent : rContentrContent : ID IS STRING PERCENT STRING SEMICOLON\n    | ID IS STRING PERCENT LPAREN arguments RPAREN SEMICOLON\n    | ID IS expression SEMICOLON'
    
_lr_action_items = {'error':([0,1,9,35,],[5,5,-2,-1,]),'QUERYNAME':([0,1,9,35,],[6,6,-2,-1,]),'IDENTIFY':([0,1,9,10,11,13,35,37,98,172,216,],[7,7,-2,7,-9,7,-1,-8,-12,-10,-11,]),'$end':([1,9,35,],[0,-2,-1,]),'SEMICOLON':([2,4,8,23,24,25,26,27,28,29,30,33,36,38,39,40,41,54,59,60,61,62,63,64,65,69,76,82,93,94,95,97,99,100,109,110,111,122,124,130,131,138,148,149,165,168,169,170,171,174,176,178,179,180,184,185,186,197,198,201,204,206,215,219,221,224,226,227,228,229,],[9,-4,35,-13,-14,-37,-18,-17,-32,-33,-34,-38,-3,-40,-5,71,-7,-16,-49,-50,-51,-52,-53,-35,-36,98,-23,-93,-24,-25,-29,-40,-39,-42,-57,-99,-101,-15,-20,-90,-34,172,-56,-100,-92,-86,-87,-88,-89,-41,-44,-46,-47,-48,-55,-37,206,-21,-22,216,-54,-104,-19,224,-91,-102,-43,-45,229,-103,]),'DEFINE':([3,5,10,11,13,37,71,98,172,216,],[12,12,12,-9,12,-8,-6,-12,-10,-11,]),'IS':([6,38,101,102,103,104,105,106,112,],[14,68,140,141,142,143,144,145,150,]),'ID':([7,12,14,19,20,34,42,44,45,46,47,48,49,50,51,52,57,58,68,74,75,78,81,96,108,110,111,116,117,121,125,126,127,128,129,143,144,147,149,150,151,152,156,157,158,159,160,161,162,166,175,177,183,199,206,217,218,220,224,229,],[17,38,41,54,54,54,54,76,77,54,54,54,54,54,54,54,93,94,54,112,54,54,54,54,112,112,-101,54,54,163,54,54,54,54,54,54,54,112,-100,54,54,54,54,54,54,54,54,54,54,200,54,54,112,214,-104,54,54,54,-102,-103,]),'LPAREN':([7,17,19,20,42,46,47,48,49,50,51,52,54,75,78,81,116,117,125,126,127,128,129,140,142,150,151,152,156,157,158,159,160,161,162,205,220,],[19,46,19,19,19,78,19,19,19,19,19,19,46,116,78,78,116,116,78,78,78,78,78,175,177,78,116,116,78,78,78,78,78,78,78,220,78,]),'NOT':([7,19,20,42,47,48,49,50,51,52,75,116,117,151,152,],[20,20,20,20,20,20,20,20,20,20,117,117,117,117,117,]),'FLOAT':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,145,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,181,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'INTEGER':([7,19,20,31,32,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,141,143,144,145,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[30,30,30,64,65,30,30,30,30,30,30,30,30,30,30,30,30,131,30,30,30,30,30,30,30,30,176,30,30,182,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'PLUS':([7,19,20,23,24,25,26,27,28,29,30,33,34,42,46,47,48,49,50,51,52,54,59,60,61,62,63,64,68,75,76,78,80,81,82,91,92,93,94,95,96,116,117,119,120,122,123,124,125,126,127,128,129,130,131,143,144,150,151,152,154,156,157,158,159,160,161,162,165,167,168,169,170,171,175,177,185,186,190,191,192,193,194,195,196,197,198,215,217,218,220,221,],[31,31,31,-13,-14,-37,-18,-17,-32,-33,-34,-38,31,31,31,31,31,31,31,31,31,-16,-49,-50,-51,-52,-53,-35,31,31,-23,31,126,31,-93,134,135,-24,-25,-29,31,31,31,-93,126,-15,126,-20,31,31,31,31,31,-90,-34,31,31,31,31,31,126,31,31,31,31,31,31,31,-92,126,-86,-87,-88,-89,31,31,-37,126,126,126,126,126,126,126,126,-21,-22,-19,31,31,31,-91,]),'MINUS':([7,19,20,23,24,25,26,27,28,29,30,33,34,42,46,47,48,49,50,51,52,54,59,60,61,62,63,64,68,75,76,78,80,81,82,91,92,93,94,95,96,116,117,119,120,122,123,124,125,126,127,128,129,130,131,143,144,150,151,152,154,156,157,158,159,160,161,162,165,167,168,169,170,171,175,177,185,186,190,191,192,193,194,195,196,197,198,215,217,218,220,221,],[32,32,32,-13,-14,-37,-18,-17,-32,-33,-34,-38,32,32,81,32,32,32,32,32,32,-16,-49,-50,-51,-52,-53,-35,32,81,-23,81,127,81,-93,133,136,-24,-25,-29,32,81,81,-93,127,-15,127,-20,81,81,81,81,81,-90,-34,32,32,81,81,81,127,81,81,81,81,81,81,81,-92,127,-86,-87,-88,-89,32,32,-37,127,127,127,127,127,127,127,127,-21,-22,-19,32,32,81,-91,]),'STRING':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,121,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,205,217,218,220,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,164,25,25,25,25,25,25,25,185,25,25,25,25,25,25,25,25,25,25,25,219,25,25,25,]),'SFSTRING':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'LBRACKET':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'WHERE':([15,17,],[42,-58,]),'REPORT':([16,18,21,23,24,25,26,27,28,29,30,33,43,54,55,59,60,61,62,63,64,65,72,73,76,82,83,84,85,86,87,88,89,90,93,94,95,99,100,107,113,114,115,118,119,122,124,130,131,132,133,134,135,136,146,155,165,168,169,170,171,174,176,178,179,180,187,188,189,190,191,192,193,194,195,196,197,198,207,208,209,210,211,212,213,215,221,226,227,],[-69,-59,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,74,-16,-61,-49,-50,-51,-52,-53,-35,-36,-69,108,-23,-93,-62,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,147,-70,-71,-72,-77,-78,-15,-20,-90,-34,-94,-95,-96,-97,-98,183,-76,-92,-86,-87,-88,-89,-41,-44,-46,-47,-48,-73,-74,-75,-40,-40,-40,-40,-40,-40,-40,-21,-22,-79,-80,-81,-82,-83,-84,-85,-19,-91,-43,-45,]),'SUCHTHAT':([16,18,21,23,24,25,26,27,28,29,30,33,43,54,55,59,60,61,62,63,64,65,72,76,83,84,85,86,87,88,89,90,93,94,95,99,100,107,122,124,132,133,134,135,136,174,176,178,179,180,197,198,215,226,227,],[-69,-59,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,75,-16,-61,-49,-50,-51,-52,-53,-35,-36,-69,-23,-62,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,75,-15,-20,-94,-95,-96,-97,-98,-41,-44,-46,-47,-48,-21,-22,-19,-43,-45,]),'DOT':([17,25,26,27,28,29,30,33,54,59,60,61,62,63,64,65,95,131,185,],[44,-37,57,58,-32,-33,-34,-38,44,-49,-50,-51,-52,-53,-35,-36,-29,-34,-37,]),'LBRACE':([17,54,76,124,165,],[45,45,121,166,199,]),'IN':([17,22,23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,65,76,93,94,95,122,124,197,198,215,],[-16,56,-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-36,-23,-24,-25,-29,-15,-20,-21,-22,-19,]),'OR':([18,21,23,24,25,26,27,28,29,30,33,53,54,55,59,60,61,62,63,64,65,76,82,83,84,85,86,87,88,89,90,93,94,95,99,100,115,118,119,122,124,130,131,132,133,134,135,136,153,155,165,168,169,170,171,174,176,178,179,180,187,188,189,190,191,192,193,194,195,196,197,198,207,208,209,210,211,212,213,215,221,226,227,],[47,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,47,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,-93,-62,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,152,-77,-78,-15,-20,-90,-34,-94,-95,-96,-97,-98,152,-76,-92,-86,-87,-88,-89,-41,-44,-46,-47,-48,-73,-74,-75,-40,-40,-40,-40,-40,-40,-40,-21,-22,-79,-80,-81,-82,-83,-84,-85,-19,-91,-43,-45,]),'AND':([18,21,23,24,25,26,27,28,29,30,33,53,54,55,59,60,61,62,63,64,65,76,82,83,84,85,86,87,88,89,90,93,94,95,99,100,115,118,119,122,124,130,131,132,133,134,135,136,153,155,165,168,169,170,171,174,176,178,179,180,187,188,189,190,191,192,193,194,195,196,197,198,207,208,209,210,211,212,213,215,221,226,227,],[48,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,48,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,-93,48,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,151,-77,-78,-15,-20,-90,-34,-94,-95,-96,-97,-98,151,-76,-92,-86,-87,-88,-89,-41,-44,-46,-47,-48,-73,151,-75,-40,-40,-40,-40,-40,-40,-40,-21,-22,-79,-80,-81,-82,-83,-84,-85,-19,-91,-43,-45,]),'IFA':([18,21,23,24,25,26,27,28,29,30,33,53,54,55,59,60,61,62,63,64,65,76,83,84,85,86,87,88,89,90,93,94,95,99,100,122,124,132,133,134,135,136,174,176,178,179,180,197,198,215,226,227,],[49,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,49,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,49,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,-15,-20,-94,-95,-96,-97,-98,-41,-44,-46,-47,-48,-21,-22,-19,-43,-45,]),'IFF':([18,21,23,24,25,26,27,28,29,30,33,53,54,55,59,60,61,62,63,64,65,76,83,84,85,86,87,88,89,90,93,94,95,99,100,122,124,132,133,134,135,136,174,176,178,179,180,197,198,215,226,227,],[50,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,50,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,50,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,-15,-20,-94,-95,-96,-97,-98,-41,-44,-46,-47,-48,-21,-22,-19,-43,-45,]),'ARROW':([18,21,23,24,25,26,27,28,29,30,33,53,54,55,59,60,61,62,63,64,65,76,83,84,85,86,87,88,89,90,93,94,95,99,100,122,124,132,133,134,135,136,174,176,178,179,180,197,198,215,226,227,],[51,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,51,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,51,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,-15,-20,-94,-95,-96,-97,-98,-41,-44,-46,-47,-48,-21,-22,-19,-43,-45,]),'LE':([18,21,23,24,25,26,27,28,29,30,33,53,54,55,59,60,61,62,63,64,65,76,82,83,84,85,86,87,88,89,90,93,94,95,99,100,119,120,122,124,130,131,132,133,134,135,136,154,165,168,169,170,171,174,176,178,179,180,197,198,215,221,226,227,],[52,-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,52,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,-93,52,52,52,52,52,None,-60,-40,-24,-25,-29,-39,-42,-93,159,-15,-20,-90,-34,-94,-95,-96,-97,-98,159,-92,-86,-87,-88,-89,-41,-44,-46,-47,-48,-21,-22,-19,-91,-43,-45,]),'RPAREN':([21,23,24,25,26,27,28,29,30,33,46,53,54,55,59,60,61,62,63,64,65,76,79,80,82,83,84,85,86,87,88,89,90,93,94,95,99,100,118,119,122,123,124,130,131,132,133,134,135,136,153,154,155,165,167,168,169,170,171,174,176,178,179,180,187,188,189,190,191,192,193,194,195,196,197,198,207,208,209,210,211,212,213,215,220,221,222,223,225,226,227,],[-68,-13,-14,-37,-18,-17,-32,-33,-34,-38,-26,89,-16,-61,-49,-50,-51,-52,-53,-35,-36,-23,124,-27,-93,-62,-63,-64,-65,-66,-67,-60,-40,-24,-25,-29,-39,-42,-77,-78,-15,165,-20,-90,-34,-94,-95,-96,-97,-98,189,165,-76,-92,-28,-86,-87,-88,-89,-41,-44,-46,-47,-48,-73,-74,-75,-40,-40,-40,-40,-40,-40,-40,-21,-22,-79,-80,-81,-82,-83,-84,-85,-19,-26,-91,226,227,228,-43,-45,]),'RBRACKET':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,65,66,67,76,93,94,95,122,124,137,197,198,215,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-36,95,-31,-23,-24,-25,-29,-15,-20,-30,-21,-22,-19,]),'COMMA':([23,24,25,26,27,28,29,30,33,46,54,59,60,61,62,63,64,65,66,67,76,79,80,82,93,94,95,99,100,122,124,130,131,137,165,167,168,169,170,171,174,176,178,179,180,197,198,202,203,215,220,221,225,226,227,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-26,-16,-49,-50,-51,-52,-53,-35,-36,96,-31,-23,125,-27,-93,-24,-25,-29,139,-42,-15,-20,-90,-34,-30,-92,-28,-86,-87,-88,-89,-41,-44,-46,-47,-48,-21,-22,217,218,-19,-26,-91,125,-43,-45,]),'TIMES':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,80,82,93,94,95,119,120,122,123,124,130,131,154,165,167,168,169,170,171,185,186,190,191,192,193,194,195,196,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,128,-93,-24,-25,-29,-93,128,-15,128,-20,-90,-34,128,-92,128,128,128,-88,-89,-37,128,128,128,128,128,128,128,128,-21,-22,-19,-91,]),'DIVIDE':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,80,82,93,94,95,119,120,122,123,124,130,131,154,165,167,168,169,170,171,185,186,190,191,192,193,194,195,196,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,129,-93,-24,-25,-29,-93,129,-15,129,-20,-90,-34,129,-92,129,129,129,-88,-89,-37,129,129,129,129,129,129,129,129,-21,-22,-19,-91,]),'WITH':([23,24,25,26,27,28,29,30,33,38,54,59,60,61,62,63,64,65,76,82,90,93,94,95,97,122,124,130,131,133,134,135,136,165,168,169,170,171,190,191,192,193,194,195,196,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,70,-16,-49,-50,-51,-52,-53,-35,-36,-23,-93,70,-24,-25,-29,70,-15,-20,-90,-34,-95,-96,-97,-98,-92,-86,-87,-88,-89,70,70,70,70,70,70,70,-21,-22,-19,-91,]),'AS':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,65,76,93,94,95,97,99,100,122,124,138,174,176,178,179,180,197,198,215,226,227,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-36,-23,-24,-25,-29,-40,-39,-42,-15,-20,173,-41,-44,-46,-47,-48,-21,-22,-19,-43,-45,]),'EQUALS':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,82,93,94,95,119,120,122,124,130,131,154,165,168,169,170,171,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,-93,-24,-25,-29,-93,156,-15,-20,-90,-34,156,-92,-86,-87,-88,-89,-21,-22,-19,-91,]),'GT':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,82,93,94,95,119,120,122,124,130,131,154,165,168,169,170,171,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,-93,-24,-25,-29,-93,157,-15,-20,-90,-34,157,-92,-86,-87,-88,-89,-21,-22,-19,-91,]),'GE':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,82,93,94,95,119,120,122,124,130,131,154,165,168,169,170,171,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,-93,-24,-25,-29,-93,158,-15,-20,-90,-34,158,-92,-86,-87,-88,-89,-21,-22,-19,-91,]),'LT':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,82,93,94,95,119,120,122,124,130,131,154,165,168,169,170,171,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,-93,-24,-25,-29,-93,160,-15,-20,-90,-34,160,-92,-86,-87,-88,-89,-21,-22,-19,-91,]),'NE':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,82,93,94,95,119,120,122,124,130,131,154,165,168,169,170,171,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,-93,-24,-25,-29,-93,161,-15,-20,-90,-34,161,-92,-86,-87,-88,-89,-21,-22,-19,-91,]),'ARROWR':([23,24,25,26,27,28,29,30,33,54,59,60,61,62,63,64,76,82,93,94,95,119,120,122,124,130,131,154,165,168,169,170,171,197,198,215,221,],[-13,-14,-37,-18,-17,-32,-33,-34,-38,-16,-49,-50,-51,-52,-53,-35,-23,-93,-24,-25,-29,-93,162,-15,-20,-90,-34,162,-92,-86,-87,-88,-89,-21,-22,-19,-91,]),'DA':([29,30,131,181,182,],[59,61,61,59,61,]),'PPM':([29,30,131,181,182,],[60,63,63,60,63,]),'RES':([30,131,182,],[62,62,62,]),'MS1':([56,],[91,]),'MS2':([56,],[92,]),'DBR':([70,139,],[101,101,]),'CHG':([70,139,],[102,102,]),'MASSRANGE':([70,139,],[103,103,]),'MINOCC':([70,139,],[104,104,]),'MAXOCC':([70,139,],[105,105,]),'TOLERANCE':([70,139,],[106,106,]),'RBRACE':([77,163,164,200,214,],[122,197,198,215,221,]),'NEUTRALLOSS':([173,],[201,]),'PERCENT':([185,],[205,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'script':([0,1,],[2,8,]),'scriptname':([0,1,],[3,3,]),'identification':([0,1,10,13,],[4,4,36,39,]),'variables':([3,5,],[10,13,]),'var':([3,5,10,13,],[11,11,37,37,]),'tagname':([7,],[15,]),'marks':([7,42,],[16,72,]),'boolmarks':([7,19,20,42,47,48,49,50,51,52,],[18,53,55,18,83,84,85,86,87,88,]),'scan':([7,19,20,42,47,48,49,50,51,52,],[21,21,21,21,21,21,21,21,21,21,]),'object':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[22,22,22,67,22,82,22,22,22,22,22,22,97,119,82,82,137,119,119,82,82,82,82,82,178,179,82,119,119,82,82,82,82,82,82,82,202,203,222,223,82,]),'withAttr':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'onlyObj':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'varcontent':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'list':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'tolerancetype':([7,19,20,34,42,46,47,48,49,50,51,52,68,75,78,81,96,116,117,125,126,127,128,129,143,144,145,150,151,152,156,157,158,159,160,161,162,175,177,217,218,220,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,180,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'getQueryName':([14,],[40,]),'evalMarks':([16,72,],[43,107,]),'listcontent':([34,],[66,]),'options':([38,90,97,190,191,192,193,194,195,196,],[69,132,138,207,208,209,210,211,212,213,]),'suchthat':([43,107,],[73,146,]),'arguments':([46,220,],[79,225,]),'expression':([46,75,78,81,116,117,125,126,127,128,129,150,151,152,156,157,158,159,160,161,162,220,],[80,120,123,130,154,120,167,168,169,170,171,186,120,120,190,191,192,193,194,195,196,80,]),'scope':([56,],[90,]),'optioncontent':([70,],[99,]),'optionentry':([70,139,],[100,174,]),'report':([74,108,147,183,],[109,148,184,204,]),'reportContent':([74,108,147,183,],[110,110,110,110,]),'rContent':([74,108,110,147,183,],[111,111,149,111,111,]),'body':([75,],[113,]),'bterm':([75,],[114,]),'booleanterm':([75,116,117,151,152,],[115,153,155,187,188,]),'expr':([75,116,117,151,152,],[118,118,118,118,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program script SEMICOLON','program',3,'p_program_multi','mfqlParser.py',218),
  ('program -> script SEMICOLON','program',2,'p_program_single','mfqlParser.py',222),
  ('script -> scriptname variables identification','script',3,'p_script','mfqlParser.py',228),
  ('script -> identification','script',1,'p_script','mfqlParser.py',229),
  ('script -> error variables identification','script',3,'p_script_error','mfqlParser.py',233),
  ('scriptname -> QUERYNAME IS getQueryName SEMICOLON','scriptname',4,'p_scriptname','mfqlParser.py',241),
  ('getQueryName -> ID','getQueryName',1,'p_getQueryName','mfqlParser.py',272),
  ('variables -> variables var','variables',2,'p_variables_loop','mfqlParser.py',279),
  ('variables -> var','variables',1,'p_variables_endloop','mfqlParser.py',283),
  ('var -> DEFINE ID IS object options SEMICOLON','var',6,'p_var_normal','mfqlParser.py',287),
  ('var -> DEFINE ID IS object options AS NEUTRALLOSS SEMICOLON','var',8,'p_var_normal','mfqlParser.py',288),
  ('var -> DEFINE ID options SEMICOLON','var',4,'p_var_emptyVar','mfqlParser.py',342),
  ('object -> withAttr','object',1,'p_object_withAttr','mfqlParser.py',361),
  ('object -> onlyObj','object',1,'p_object_onlyObj','mfqlParser.py',366),
  ('onlyObj -> ID LBRACE ID RBRACE','onlyObj',4,'p_onlyObj_ID_itemAccess','mfqlParser.py',376),
  ('onlyObj -> ID','onlyObj',1,'p_onlyObj_ID','mfqlParser.py',382),
  ('onlyObj -> list','onlyObj',1,'p_onlyObj_list','mfqlParser.py',388),
  ('onlyObj -> varcontent','onlyObj',1,'p_onlyObj_varcontent','mfqlParser.py',395),
  ('onlyObj -> ID LPAREN arguments RPAREN LBRACE ID RBRACE','onlyObj',7,'p_onlyObj_function1','mfqlParser.py',400),
  ('onlyObj -> ID LPAREN arguments RPAREN','onlyObj',4,'p_onlyObj_function2','mfqlParser.py',406),
  ('withAttr -> ID DOT ID LBRACE ID RBRACE','withAttr',6,'p_withAttr_accessItem_','mfqlParser.py',412),
  ('withAttr -> ID DOT ID LBRACE STRING RBRACE','withAttr',6,'p_withAttr_accessItem_string','mfqlParser.py',419),
  ('withAttr -> ID DOT ID','withAttr',3,'p_withAttr_id','mfqlParser.py',426),
  ('withAttr -> varcontent DOT ID','withAttr',3,'p_withAttr_varcontent','mfqlParser.py',436),
  ('withAttr -> list DOT ID','withAttr',3,'p_withAttr_list','mfqlParser.py',444),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','mfqlParser.py',451),
  ('arguments -> expression','arguments',1,'p_arguments_single','mfqlParser.py',456),
  ('arguments -> arguments COMMA expression','arguments',3,'p_arguments_multi','mfqlParser.py',461),
  ('list -> LBRACKET listcontent RBRACKET','list',3,'p_list','mfqlParser.py',470),
  ('listcontent -> listcontent COMMA object','listcontent',3,'p_listcontent_cont','mfqlParser.py',478),
  ('listcontent -> object','listcontent',1,'p_listcontent_obj','mfqlParser.py',486),
  ('varcontent -> tolerancetype','varcontent',1,'p_varcontent_tolerance','mfqlParser.py',496),
  ('varcontent -> FLOAT','varcontent',1,'p_varcontent_float','mfqlParser.py',502),
  ('varcontent -> INTEGER','varcontent',1,'p_varcontent_integer','mfqlParser.py',514),
  ('varcontent -> PLUS INTEGER','varcontent',2,'p_varcontent_integer','mfqlParser.py',515),
  ('varcontent -> MINUS INTEGER','varcontent',2,'p_varcontent_integer','mfqlParser.py',516),
  ('varcontent -> STRING','varcontent',1,'p_varcontent_string','mfqlParser.py',534),
  ('varcontent -> SFSTRING','varcontent',1,'p_varcontent_sfstring','mfqlParser.py',541),
  ('options -> WITH optioncontent','options',2,'p_options_there','mfqlParser.py',554),
  ('options -> <empty>','options',0,'p_options_not_there','mfqlParser.py',559),
  ('optioncontent -> optioncontent COMMA optionentry','optioncontent',3,'p_optioncontent_cont','mfqlParser.py',563),
  ('optioncontent -> optionentry','optioncontent',1,'p_optioncontent_obj','mfqlParser.py',569),
  ('optionentry -> DBR IS LPAREN object COMMA object RPAREN','optionentry',7,'p_optionentry_dbr','mfqlParser.py',574),
  ('optionentry -> CHG IS INTEGER','optionentry',3,'p_optionentry_chg','mfqlParser.py',579),
  ('optionentry -> MASSRANGE IS LPAREN object COMMA object RPAREN','optionentry',7,'p_optionentry_massrange','mfqlParser.py',584),
  ('optionentry -> MINOCC IS object','optionentry',3,'p_optionentry_minocc','mfqlParser.py',589),
  ('optionentry -> MAXOCC IS object','optionentry',3,'p_optionentry_maxocc','mfqlParser.py',594),
  ('optionentry -> TOLERANCE IS tolerancetype','optionentry',3,'p_optionentry_TOLERANCE','mfqlParser.py',599),
  ('tolerancetype -> FLOAT DA','tolerancetype',2,'p_tolerancetype','mfqlParser.py',604),
  ('tolerancetype -> FLOAT PPM','tolerancetype',2,'p_tolerancetype','mfqlParser.py',605),
  ('tolerancetype -> INTEGER DA','tolerancetype',2,'p_tolerancetype','mfqlParser.py',606),
  ('tolerancetype -> INTEGER RES','tolerancetype',2,'p_tolerancetype','mfqlParser.py',607),
  ('tolerancetype -> INTEGER PPM','tolerancetype',2,'p_tolerancetype','mfqlParser.py',608),
  ('identification -> IDENTIFY tagname WHERE marks evalMarks suchthat REPORT report','identification',8,'p_identification_normal_old','mfqlParser.py',622),
  ('identification -> IDENTIFY tagname WHERE marks evalMarks REPORT report','identification',7,'p_identification_normal_old','mfqlParser.py',623),
  ('identification -> IDENTIFY marks evalMarks suchthat REPORT report','identification',6,'p_identification_normal_new','mfqlParser.py',666),
  ('identification -> IDENTIFY marks evalMarks REPORT report','identification',5,'p_identification_normal_new','mfqlParser.py',667),
  ('tagname -> ID','tagname',1,'p_tagname','mfqlParser.py',707),
  ('marks -> boolmarks','marks',1,'p_marks','mfqlParser.py',721),
  ('boolmarks -> LPAREN boolmarks RPAREN','boolmarks',3,'p_booleanterm_paren','mfqlParser.py',747),
  ('boolmarks -> NOT boolmarks','boolmarks',2,'p_boolmarks_not','mfqlParser.py',752),
  ('boolmarks -> boolmarks OR boolmarks','boolmarks',3,'p_boolmarks_or','mfqlParser.py',758),
  ('boolmarks -> boolmarks AND boolmarks','boolmarks',3,'p_boolmarks_and','mfqlParser.py',764),
  ('boolmarks -> boolmarks IFA boolmarks','boolmarks',3,'p_boolmarks_if','mfqlParser.py',773),
  ('boolmarks -> boolmarks IFF boolmarks','boolmarks',3,'p_boolmarks_onlyif','mfqlParser.py',782),
  ('boolmarks -> boolmarks ARROW boolmarks','boolmarks',3,'p_boolmarks_arrow','mfqlParser.py',791),
  ('boolmarks -> boolmarks LE boolmarks','boolmarks',3,'p_boolmarks_le','mfqlParser.py',800),
  ('boolmarks -> scan','boolmarks',1,'p_boolmarks_toScan','mfqlParser.py',809),
  ('evalMarks -> <empty>','evalMarks',0,'p_evalMarks','mfqlParser.py',815),
  ('suchthat -> SUCHTHAT body','suchthat',2,'p_suchthat_single','mfqlParser.py',824),
  ('body -> bterm','body',1,'p_body_bool','mfqlParser.py',833),
  ('bterm -> booleanterm','bterm',1,'p_bterm','mfqlParser.py',838),
  ('booleanterm -> booleanterm AND booleanterm','booleanterm',3,'p_booleanterm_logic','mfqlParser.py',980),
  ('booleanterm -> booleanterm OR booleanterm','booleanterm',3,'p_booleanterm_logic','mfqlParser.py',981),
  ('booleanterm -> LPAREN booleanterm RPAREN','booleanterm',3,'p_booleanterm_brackets','mfqlParser.py',994),
  ('booleanterm -> NOT booleanterm','booleanterm',2,'p_booleanterm_not','mfqlParser.py',1007),
  ('booleanterm -> expr','booleanterm',1,'p_booleanterm_expr','mfqlParser.py',1020),
  ('booleanterm -> object','booleanterm',1,'p_booleanterm_expression','mfqlParser.py',1033),
  ('expr -> expression EQUALS expression options','expr',4,'p_expr_multi','mfqlParser.py',1046),
  ('expr -> expression GT expression options','expr',4,'p_expr_multi','mfqlParser.py',1047),
  ('expr -> expression GE expression options','expr',4,'p_expr_multi','mfqlParser.py',1048),
  ('expr -> expression LE expression options','expr',4,'p_expr_multi','mfqlParser.py',1049),
  ('expr -> expression LT expression options','expr',4,'p_expr_multi','mfqlParser.py',1050),
  ('expr -> expression NE expression options','expr',4,'p_expr_multi','mfqlParser.py',1051),
  ('expr -> expression ARROWR expression options','expr',4,'p_expr_multi','mfqlParser.py',1052),
  ('expression -> expression PLUS expression','expression',3,'p_expression_struct','mfqlParser.py',1065),
  ('expression -> expression MINUS expression','expression',3,'p_expression_struct','mfqlParser.py',1066),
  ('expression -> expression TIMES expression','expression',3,'p_expression_struct','mfqlParser.py',1067),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_struct','mfqlParser.py',1068),
  ('expression -> MINUS expression','expression',2,'p_expression_struct','mfqlParser.py',1069),
  ('expression -> LPAREN expression RPAREN LBRACE ID RBRACE','expression',6,'p_expression_attribute','mfqlParser.py',1086),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','mfqlParser.py',1101),
  ('expression -> object','expression',1,'p_expression_content','mfqlParser.py',1106),
  ('scan -> object IN scope options','scan',4,'p_scan_object','mfqlParser.py',1122),
  ('scope -> MS1 MINUS','scope',2,'p_scope','mfqlParser.py',1202),
  ('scope -> MS1 PLUS','scope',2,'p_scope','mfqlParser.py',1203),
  ('scope -> MS2 PLUS','scope',2,'p_scope','mfqlParser.py',1204),
  ('scope -> MS2 MINUS','scope',2,'p_scope','mfqlParser.py',1205),
  ('report -> reportContent','report',1,'p_report','mfqlParser.py',1211),
  ('reportContent -> reportContent rContent','reportContent',2,'p_reportContent_cont','mfqlParser.py',1216),
  ('reportContent -> rContent','reportContent',1,'p_reportContent_single','mfqlParser.py',1222),
  ('rContent -> ID IS STRING PERCENT STRING SEMICOLON','rContent',6,'p_rContent','mfqlParser.py',1227),
  ('rContent -> ID IS STRING PERCENT LPAREN arguments RPAREN SEMICOLON','rContent',8,'p_rContent','mfqlParser.py',1228),
  ('rContent -> ID IS expression SEMICOLON','rContent',4,'p_rContent','mfqlParser.py',1229),
]
