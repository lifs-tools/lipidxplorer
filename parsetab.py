# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = "3.2"

_lr_method = "LALR"

_lr_signature = "\xf0\r\xc3\x16\x17\xee\xa9\xb8/\x08\xbe\xe1\x8e\x8a\xf7T"

_lr_action_items = {
    "DBR": ([70, 140,], [105, 105,]),
    "ARROW": (
        [
            15,
            16,
            17,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            94,
            95,
            99,
            104,
            121,
            122,
            123,
            124,
            125,
            126,
            129,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            213,
            226,
            227,
        ],
        [
            -14,
            -68,
            46,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            46,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            46,
            -29,
            -24,
            -40,
            -60,
            -23,
            -25,
            -39,
            -42,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -20,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            -19,
            -45,
            -43,
        ],
    ),
    "RES": ([30, 127, 178,], [60, 60, 60,]),
    "NEUTRALLOSS": ([173,], [201,]),
    "QUERYNAME": ([0, 4, 8, 40,], [2, 2, -2, -1,]),
    "ARROWR": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            -23,
            -25,
            -93,
            157,
            -15,
            -34,
            -90,
            -20,
            157,
            -92,
            -86,
            -89,
            -87,
            -88,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "LBRACKET": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
            18,
        ],
    ),
    "IFF": (
        [
            15,
            16,
            17,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            94,
            95,
            99,
            104,
            121,
            122,
            123,
            124,
            125,
            126,
            129,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            213,
            226,
            227,
        ],
        [
            -14,
            -68,
            44,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            44,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            44,
            -29,
            -24,
            -40,
            -60,
            -23,
            -25,
            -39,
            -42,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -20,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            -19,
            -45,
            -43,
        ],
    ),
    "IDENTIFY": (
        [0, 4, 8, 10, 11, 14, 37, 40, 106, 172, 216,],
        [7, 7, -2, 7, -9, 7, -8, -1, -12, -10, -11,],
    ),
    "IFA": (
        [
            15,
            16,
            17,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            94,
            95,
            99,
            104,
            121,
            122,
            123,
            124,
            125,
            126,
            129,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            213,
            226,
            227,
        ],
        [
            -14,
            -68,
            45,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            45,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            45,
            -29,
            -24,
            -40,
            -60,
            -23,
            -25,
            -39,
            -42,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -20,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            -19,
            -45,
            -43,
        ],
    ),
    "REPORT": (
        [
            15,
            16,
            17,
            20,
            21,
            23,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            54,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            83,
            86,
            87,
            91,
            94,
            95,
            96,
            99,
            104,
            108,
            109,
            110,
            111,
            113,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            137,
            150,
            163,
            164,
            165,
            166,
            167,
            171,
            174,
            175,
            176,
            179,
            181,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            197,
            198,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            213,
            221,
            226,
            227,
        ],
        [
            -14,
            -68,
            -59,
            -37,
            -18,
            -69,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            82,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            -62,
            -29,
            -24,
            120,
            -40,
            -60,
            -93,
            -23,
            -25,
            -69,
            -39,
            -42,
            -71,
            -72,
            -70,
            -78,
            -77,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -34,
            -90,
            -20,
            170,
            -76,
            -92,
            -86,
            -89,
            -87,
            -88,
            200,
            -46,
            -41,
            -48,
            -44,
            -47,
            -73,
            -74,
            -75,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -22,
            -21,
            -82,
            -84,
            -79,
            -83,
            -81,
            -80,
            -85,
            -19,
            -91,
            -45,
            -43,
        ],
    ),
    "SUCHTHAT": (
        [
            15,
            16,
            17,
            20,
            21,
            23,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            54,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            94,
            95,
            96,
            99,
            104,
            121,
            122,
            123,
            124,
            125,
            126,
            129,
            137,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            213,
            226,
            227,
        ],
        [
            -14,
            -68,
            -59,
            -37,
            -18,
            -69,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            81,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            -62,
            -29,
            -24,
            -40,
            -60,
            -23,
            -25,
            -69,
            -39,
            -42,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -20,
            81,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            -19,
            -45,
            -43,
        ],
    ),
    "MINOCC": ([70, 140,], [98, 98,]),
    "WITH": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            39,
            50,
            51,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            86,
            91,
            94,
            95,
            97,
            121,
            122,
            123,
            124,
            126,
            127,
            128,
            129,
            163,
            164,
            165,
            166,
            167,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            70,
            -16,
            -36,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            70,
            -93,
            -23,
            -25,
            70,
            -97,
            -98,
            -96,
            -95,
            -15,
            -34,
            -90,
            -20,
            -92,
            -86,
            -89,
            -87,
            -88,
            70,
            70,
            70,
            70,
            70,
            70,
            70,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "MINUS": (
        [
            7,
            15,
            18,
            20,
            21,
            24,
            26,
            27,
            28,
            30,
            31,
            32,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            50,
            53,
            58,
            60,
            61,
            62,
            63,
            64,
            66,
            69,
            78,
            79,
            80,
            81,
            84,
            85,
            89,
            91,
            92,
            93,
            94,
            95,
            111,
            112,
            114,
            115,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            149,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            162,
            163,
            164,
            165,
            166,
            167,
            180,
            182,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            197,
            198,
            213,
            217,
            218,
            220,
            221,
        ],
        [
            19,
            -14,
            19,
            -37,
            -18,
            -32,
            -38,
            -13,
            19,
            -34,
            -33,
            -17,
            19,
            19,
            19,
            19,
            19,
            19,
            19,
            -16,
            -35,
            89,
            -52,
            -53,
            -51,
            -50,
            -49,
            19,
            19,
            19,
            -29,
            -24,
            89,
            122,
            124,
            89,
            -93,
            89,
            134,
            -23,
            -25,
            -93,
            89,
            89,
            134,
            -15,
            -34,
            -90,
            -20,
            89,
            134,
            89,
            89,
            89,
            89,
            19,
            19,
            89,
            89,
            134,
            89,
            89,
            89,
            89,
            89,
            89,
            89,
            89,
            134,
            -92,
            -86,
            -89,
            -87,
            -88,
            19,
            19,
            134,
            134,
            134,
            134,
            134,
            134,
            134,
            -37,
            134,
            -22,
            -21,
            -19,
            19,
            19,
            89,
            -91,
        ],
    ),
    "COMMA": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            48,
            49,
            50,
            51,
            53,
            58,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            90,
            91,
            93,
            94,
            95,
            99,
            104,
            107,
            126,
            127,
            128,
            129,
            162,
            163,
            164,
            165,
            166,
            167,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            202,
            203,
            213,
            220,
            221,
            225,
            226,
            227,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -31,
            78,
            -16,
            -36,
            -35,
            -26,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            130,
            -93,
            -27,
            -23,
            -25,
            140,
            -42,
            -30,
            -15,
            -34,
            -90,
            -20,
            -28,
            -92,
            -86,
            -89,
            -87,
            -88,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            217,
            218,
            -19,
            -26,
            -91,
            130,
            -45,
            -43,
        ],
    ),
    "DIVIDE": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            93,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            131,
            149,
            162,
            163,
            164,
            165,
            166,
            167,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            133,
            -23,
            -25,
            -93,
            133,
            -15,
            -34,
            -90,
            -20,
            133,
            133,
            133,
            -92,
            133,
            -89,
            133,
            -88,
            133,
            133,
            133,
            133,
            133,
            133,
            133,
            -37,
            133,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "LE": (
        [
            15,
            16,
            17,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            91,
            94,
            95,
            99,
            104,
            111,
            115,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            213,
            221,
            226,
            227,
        ],
        [
            -14,
            -68,
            43,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            43,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            43,
            None,
            43,
            43,
            43,
            43,
            -29,
            -24,
            -40,
            -60,
            -93,
            -23,
            -25,
            -39,
            -42,
            -93,
            151,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -34,
            -90,
            -20,
            151,
            -92,
            -86,
            -89,
            -87,
            -88,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            -19,
            -91,
            -45,
            -43,
        ],
    ),
    "RPAREN": (
        [
            15,
            16,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            58,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            90,
            91,
            93,
            94,
            95,
            99,
            104,
            111,
            113,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            131,
            148,
            149,
            150,
            162,
            163,
            164,
            165,
            166,
            167,
            174,
            175,
            176,
            179,
            181,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            197,
            198,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            213,
            220,
            221,
            222,
            223,
            225,
            226,
            227,
        ],
        [
            -14,
            -68,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            87,
            -26,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            -62,
            -29,
            -24,
            -40,
            -60,
            129,
            -93,
            -27,
            -23,
            -25,
            -39,
            -42,
            -78,
            -77,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -34,
            -90,
            -20,
            163,
            185,
            163,
            -76,
            -28,
            -92,
            -86,
            -89,
            -87,
            -88,
            -46,
            -41,
            -48,
            -44,
            -47,
            -73,
            -74,
            -75,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -22,
            -21,
            -82,
            -84,
            -79,
            -83,
            -81,
            -80,
            -85,
            -19,
            -26,
            -91,
            226,
            227,
            228,
            -45,
            -43,
        ],
    ),
    "SEMICOLON": (
        [
            1,
            5,
            13,
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            35,
            36,
            38,
            39,
            41,
            50,
            51,
            53,
            60,
            61,
            62,
            63,
            64,
            71,
            79,
            80,
            91,
            94,
            95,
            97,
            99,
            104,
            117,
            118,
            119,
            126,
            127,
            128,
            129,
            138,
            159,
            160,
            163,
            164,
            165,
            166,
            167,
            174,
            175,
            176,
            179,
            181,
            193,
            194,
            197,
            198,
            199,
            201,
            212,
            213,
            215,
            219,
            221,
            224,
            226,
            227,
            228,
            229,
        ],
        [
            8,
            -4,
            40,
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            68,
            -7,
            -3,
            -40,
            -5,
            -16,
            -36,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            106,
            -29,
            -24,
            -93,
            -23,
            -25,
            -40,
            -39,
            -42,
            -57,
            -101,
            -99,
            -15,
            -34,
            -90,
            -20,
            172,
            -100,
            -56,
            -92,
            -86,
            -89,
            -87,
            -88,
            -46,
            -41,
            -48,
            -44,
            -47,
            -37,
            212,
            -22,
            -21,
            -55,
            216,
            -104,
            -19,
            -54,
            224,
            -91,
            -102,
            -45,
            -43,
            229,
            -103,
        ],
    ),
    "TOLERANCE": ([70, 140,], [100, 100,]),
    "NE": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            -23,
            -25,
            -93,
            152,
            -15,
            -34,
            -90,
            -20,
            152,
            -92,
            -86,
            -89,
            -87,
            -88,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "PPM": ([30, 31, 127, 177, 178,], [61, 63, 61, 63, 61,]),
    "MAXOCC": ([70, 140,], [103, 103,]),
    "LT": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            -23,
            -25,
            -93,
            154,
            -15,
            -34,
            -90,
            -20,
            154,
            -92,
            -86,
            -89,
            -87,
            -88,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "PLUS": (
        [
            7,
            15,
            18,
            20,
            21,
            24,
            26,
            27,
            28,
            30,
            31,
            32,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            50,
            53,
            58,
            60,
            61,
            62,
            63,
            64,
            66,
            69,
            78,
            79,
            80,
            81,
            84,
            85,
            89,
            91,
            92,
            93,
            94,
            95,
            111,
            112,
            114,
            115,
            126,
            127,
            128,
            129,
            130,
            131,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            149,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            162,
            163,
            164,
            165,
            166,
            167,
            180,
            182,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            197,
            198,
            213,
            217,
            218,
            220,
            221,
        ],
        [
            22,
            -14,
            22,
            -37,
            -18,
            -32,
            -38,
            -13,
            22,
            -34,
            -33,
            -17,
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            -16,
            -35,
            22,
            -52,
            -53,
            -51,
            -50,
            -49,
            22,
            22,
            22,
            -29,
            -24,
            22,
            121,
            123,
            22,
            -93,
            22,
            132,
            -23,
            -25,
            -93,
            22,
            22,
            132,
            -15,
            -34,
            -90,
            -20,
            22,
            132,
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            132,
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            22,
            132,
            -92,
            -86,
            -89,
            -87,
            -88,
            22,
            22,
            132,
            132,
            132,
            132,
            132,
            132,
            132,
            -37,
            132,
            -22,
            -21,
            -19,
            22,
            22,
            22,
            -91,
        ],
    ),
    "DOT": (
        [20, 21, 24, 26, 29, 30, 31, 32, 50, 51, 53, 60, 61, 62, 63, 64, 79, 127, 193,],
        [
            -37,
            52,
            -32,
            -38,
            59,
            -34,
            -33,
            65,
            59,
            -36,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -34,
            -37,
        ],
    ),
    "INTEGER": (
        [
            7,
            18,
            19,
            22,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            141,
            142,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            30,
            30,
            51,
            53,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            127,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            178,
            179,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
        ],
    ),
    "$end": ([4, 8, 40,], [0, -2, -1,]),
    "GT": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            -23,
            -25,
            -93,
            156,
            -15,
            -34,
            -90,
            -20,
            156,
            -92,
            -86,
            -89,
            -87,
            -88,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "STRING": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            136,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            211,
            217,
            218,
            220,
        ],
        [
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            168,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            20,
            193,
            20,
            20,
            219,
            20,
            20,
            20,
        ],
    ),
    "CHG": ([70, 140,], [101, 101,]),
    "IS": (
        [2, 39, 98, 100, 101, 102, 103, 105, 116,],
        [9, 69, 139, 141, 142, 143, 144, 145, 158,],
    ),
    "MS2": ([55,], [84,]),
    "PERCENT": ([193,], [211,]),
    "EQUALS": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            -23,
            -25,
            -93,
            153,
            -15,
            -34,
            -90,
            -20,
            153,
            -92,
            -86,
            -89,
            -87,
            -88,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "MASSRANGE": ([70, 140,], [102, 102,]),
    "TIMES": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            93,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            131,
            149,
            162,
            163,
            164,
            165,
            166,
            167,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            193,
            194,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            135,
            -23,
            -25,
            -93,
            135,
            -15,
            -34,
            -90,
            -20,
            135,
            135,
            135,
            -92,
            135,
            -89,
            135,
            -88,
            135,
            135,
            135,
            135,
            135,
            135,
            135,
            -37,
            135,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "SFSTRING": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
            26,
        ],
    ),
    "AS": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            94,
            95,
            97,
            99,
            104,
            126,
            129,
            138,
            174,
            175,
            176,
            179,
            181,
            197,
            198,
            213,
            226,
            227,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -23,
            -25,
            -40,
            -39,
            -42,
            -15,
            -20,
            173,
            -46,
            -41,
            -48,
            -44,
            -47,
            -22,
            -21,
            -19,
            -45,
            -43,
        ],
    ),
    "LPAREN": (
        [
            7,
            28,
            29,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            50,
            58,
            66,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            143,
            145,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            211,
            220,
        ],
        [
            28,
            28,
            58,
            28,
            28,
            28,
            28,
            28,
            28,
            28,
            58,
            92,
            28,
            112,
            92,
            92,
            112,
            112,
            92,
            92,
            92,
            92,
            92,
            180,
            182,
            112,
            112,
            92,
            92,
            92,
            92,
            92,
            92,
            92,
            92,
            220,
            92,
        ],
    ),
    "IN": (
        [
            15,
            20,
            21,
            24,
            25,
            26,
            27,
            29,
            30,
            31,
            32,
            50,
            51,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            94,
            95,
            126,
            129,
            197,
            198,
            213,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            55,
            -38,
            -13,
            -16,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -23,
            -25,
            -15,
            -20,
            -22,
            -21,
            -19,
        ],
    ),
    "DA": ([30, 31, 127, 177, 178,], [62, 64, 62, 64, 62,]),
    "WHERE": ([29, 33,], [-58, 66,]),
    "ID": (
        [
            7,
            9,
            12,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            52,
            57,
            58,
            59,
            65,
            66,
            69,
            78,
            81,
            82,
            89,
            92,
            112,
            114,
            118,
            119,
            120,
            130,
            132,
            133,
            134,
            135,
            136,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            159,
            161,
            170,
            180,
            182,
            196,
            200,
            212,
            217,
            218,
            220,
            224,
            229,
        ],
        [
            29,
            36,
            39,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            80,
            88,
            50,
            94,
            95,
            50,
            50,
            50,
            50,
            116,
            50,
            50,
            50,
            50,
            -101,
            116,
            116,
            50,
            50,
            50,
            50,
            50,
            169,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            50,
            -100,
            195,
            116,
            50,
            50,
            214,
            116,
            -104,
            50,
            50,
            50,
            -102,
            -103,
        ],
    ),
    "AND": (
        [
            15,
            16,
            17,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            91,
            94,
            95,
            99,
            104,
            109,
            111,
            113,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            148,
            150,
            163,
            164,
            165,
            166,
            167,
            174,
            175,
            176,
            179,
            181,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            197,
            198,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            213,
            221,
            226,
            227,
        ],
        [
            -14,
            -68,
            42,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            42,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            42,
            -29,
            -24,
            -40,
            -60,
            -93,
            -23,
            -25,
            -39,
            -42,
            146,
            -78,
            -77,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -34,
            -90,
            -20,
            146,
            -76,
            -92,
            -86,
            -89,
            -87,
            -88,
            -46,
            -41,
            -48,
            -44,
            -47,
            -73,
            146,
            -75,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -22,
            -21,
            -82,
            -84,
            -79,
            -83,
            -81,
            -80,
            -85,
            -19,
            -91,
            -45,
            -43,
        ],
    ),
    "LBRACE": ([29, 50, 94, 129, 163,], [57, 57, 136, 161, 196,]),
    "FLOAT": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            141,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            177,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
        ],
    ),
    "GE": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            91,
            94,
            95,
            111,
            115,
            126,
            127,
            128,
            129,
            149,
            163,
            164,
            165,
            166,
            167,
            197,
            198,
            213,
            221,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -93,
            -23,
            -25,
            -93,
            155,
            -15,
            -34,
            -90,
            -20,
            155,
            -92,
            -86,
            -89,
            -87,
            -88,
            -22,
            -21,
            -19,
            -91,
        ],
    ),
    "MS1": ([55,], [85,]),
    "RBRACE": ([88, 168, 169, 195, 214,], [126, 197, 198, 213, 221,]),
    "error": ([0, 4, 8, 40,], [6, 6, -2, -1,]),
    "NOT": (
        [7, 28, 34, 42, 43, 44, 45, 46, 47, 66, 81, 112, 114, 146, 147,],
        [34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 114, 114, 114, 114, 114,],
    ),
    "RBRACKET": (
        [
            15,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            48,
            49,
            50,
            51,
            53,
            60,
            61,
            62,
            63,
            64,
            79,
            80,
            94,
            95,
            107,
            126,
            129,
            197,
            198,
            213,
        ],
        [
            -14,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -31,
            79,
            -16,
            -36,
            -35,
            -52,
            -53,
            -51,
            -50,
            -49,
            -29,
            -24,
            -23,
            -25,
            -30,
            -15,
            -20,
            -22,
            -21,
            -19,
        ],
    ),
    "DEFINE": (
        [3, 6, 10, 11, 14, 37, 68, 106, 172, 216,],
        [12, 12, 12, -9, 12, -8, -6, -12, -10, -11,],
    ),
    "OR": (
        [
            15,
            16,
            17,
            20,
            21,
            24,
            26,
            27,
            30,
            31,
            32,
            50,
            51,
            53,
            56,
            60,
            61,
            62,
            63,
            64,
            67,
            72,
            73,
            74,
            75,
            76,
            77,
            79,
            80,
            86,
            87,
            91,
            94,
            95,
            99,
            104,
            109,
            111,
            113,
            121,
            122,
            123,
            124,
            125,
            126,
            127,
            128,
            129,
            148,
            150,
            163,
            164,
            165,
            166,
            167,
            174,
            175,
            176,
            179,
            181,
            183,
            184,
            185,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            197,
            198,
            204,
            205,
            206,
            207,
            208,
            209,
            210,
            213,
            221,
            226,
            227,
        ],
        [
            -14,
            -68,
            47,
            -37,
            -18,
            -32,
            -38,
            -13,
            -34,
            -33,
            -17,
            -16,
            -36,
            -35,
            47,
            -52,
            -53,
            -51,
            -50,
            -49,
            -61,
            -63,
            -67,
            -65,
            -64,
            -66,
            -62,
            -29,
            -24,
            -40,
            -60,
            -93,
            -23,
            -25,
            -39,
            -42,
            147,
            -78,
            -77,
            -97,
            -98,
            -96,
            -95,
            -94,
            -15,
            -34,
            -90,
            -20,
            147,
            -76,
            -92,
            -86,
            -89,
            -87,
            -88,
            -46,
            -41,
            -48,
            -44,
            -47,
            -73,
            -74,
            -75,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -40,
            -22,
            -21,
            -82,
            -84,
            -79,
            -83,
            -81,
            -80,
            -85,
            -19,
            -91,
            -45,
            -43,
        ],
    ),
}

_lr_action = {}
for _k, _v in list(_lr_action_items.items()):
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "onlyObj": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
            15,
        ],
    ),
    "scan": (
        [7, 28, 34, 42, 43, 44, 45, 46, 47, 66,],
        [16, 16, 16, 16, 16, 16, 16, 16, 16, 16,],
    ),
    "bterm": ([81,], [108,]),
    "variables": ([3, 6,], [10, 14,]),
    "boolmarks": (
        [7, 28, 34, 42, 43, 44, 45, 46, 47, 66,],
        [17, 56, 67, 72, 73, 74, 75, 76, 77, 17,],
    ),
    "scriptname": ([0, 4,], [3, 3,]),
    "reportContent": ([82, 120, 170, 200,], [119, 119, 119, 119,]),
    "getQueryName": ([9,], [35,]),
    "script": ([0, 4,], [1, 13,]),
    "varcontent": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
            21,
        ],
    ),
    "booleanterm": ([81, 112, 114, 146, 147,], [109, 148, 150, 183, 184,]),
    "program": ([0,], [4,]),
    "identification": ([0, 4, 10, 14,], [5, 5, 38, 41,]),
    "arguments": ([58, 220,], [90, 225,]),
    "optionentry": ([70, 140,], [104, 175,]),
    "marks": ([7, 66,], [23, 96,]),
    "var": ([3, 6, 10, 14,], [11, 11, 37, 37,]),
    "listcontent": ([18,], [49,]),
    "evalMarks": ([23, 96,], [54, 137,]),
    "body": ([81,], [110,]),
    "object": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            25,
            48,
            25,
            25,
            25,
            25,
            25,
            25,
            25,
            25,
            91,
            25,
            97,
            107,
            111,
            91,
            91,
            111,
            111,
            91,
            91,
            91,
            91,
            91,
            174,
            181,
            111,
            111,
            91,
            91,
            91,
            91,
            91,
            91,
            91,
            91,
            202,
            203,
            222,
            223,
            91,
        ],
    ),
    "withAttr": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
            27,
        ],
    ),
    "rContent": ([82, 119, 120, 170, 200,], [118, 159, 118, 118, 118,]),
    "scope": ([55,], [86,]),
    "report": ([82, 120, 170, 200,], [117, 160, 199, 215,]),
    "suchthat": ([54, 137,], [83, 171,]),
    "tolerancetype": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            141,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            176,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
            24,
        ],
    ),
    "optioncontent": ([70,], [99,]),
    "expr": ([81, 112, 114, 146, 147,], [113, 113, 113, 113, 113,]),
    "list": (
        [
            7,
            18,
            28,
            34,
            42,
            43,
            44,
            45,
            46,
            47,
            58,
            66,
            69,
            78,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            139,
            144,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            180,
            182,
            217,
            218,
            220,
        ],
        [
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
        ],
    ),
    "tagname": ([7,], [33,]),
    "expression": (
        [
            58,
            81,
            89,
            92,
            112,
            114,
            130,
            132,
            133,
            134,
            135,
            146,
            147,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            158,
            220,
        ],
        [
            93,
            115,
            128,
            131,
            149,
            115,
            162,
            164,
            165,
            166,
            167,
            115,
            115,
            186,
            187,
            188,
            189,
            190,
            191,
            192,
            194,
            93,
        ],
    ),
    "options": (
        [39, 86, 97, 186, 187, 188, 189, 190, 191, 192,],
        [71, 125, 138, 204, 205, 206, 207, 208, 209, 210,],
    ),
}

_lr_goto = {}
for _k, _v in list(_lr_goto_items.items()):
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    (
        "program -> program script SEMICOLON",
        "program",
        3,
        "p_program_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        159,
    ),
    (
        "program -> script SEMICOLON",
        "program",
        2,
        "p_program_single",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        163,
    ),
    (
        "script -> scriptname variables identification",
        "script",
        3,
        "p_script",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        168,
    ),
    (
        "script -> identification",
        "script",
        1,
        "p_script",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        169,
    ),
    (
        "script -> error variables identification",
        "script",
        3,
        "p_script_error",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        172,
    ),
    (
        "scriptname -> QUERYNAME IS getQueryName SEMICOLON",
        "scriptname",
        4,
        "p_scriptname",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        179,
    ),
    (
        "getQueryName -> ID",
        "getQueryName",
        1,
        "p_getQueryName",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        210,
    ),
    (
        "variables -> variables var",
        "variables",
        2,
        "p_variables_loop",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        217,
    ),
    (
        "variables -> var",
        "variables",
        1,
        "p_variables_endloop",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        220,
    ),
    (
        "var -> DEFINE ID IS object options SEMICOLON",
        "var",
        6,
        "p_var_normal",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        223,
    ),
    (
        "var -> DEFINE ID IS object options AS NEUTRALLOSS SEMICOLON",
        "var",
        8,
        "p_var_normal",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        224,
    ),
    (
        "var -> DEFINE ID options SEMICOLON",
        "var",
        4,
        "p_var_emptyVar",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        276,
    ),
    (
        "object -> withAttr",
        "object",
        1,
        "p_object_withAttr",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        293,
    ),
    (
        "object -> onlyObj",
        "object",
        1,
        "p_object_onlyObj",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        297,
    ),
    (
        "onlyObj -> ID LBRACE ID RBRACE",
        "onlyObj",
        4,
        "p_onlyObj_ID_itemAccess",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        306,
    ),
    (
        "onlyObj -> ID",
        "onlyObj",
        1,
        "p_onlyObj_ID",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        311,
    ),
    (
        "onlyObj -> list",
        "onlyObj",
        1,
        "p_onlyObj_list",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        316,
    ),
    (
        "onlyObj -> varcontent",
        "onlyObj",
        1,
        "p_onlyObj_varcontent",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        322,
    ),
    (
        "onlyObj -> ID LPAREN arguments RPAREN LBRACE ID RBRACE",
        "onlyObj",
        7,
        "p_onlyObj_function1",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        326,
    ),
    (
        "onlyObj -> ID LPAREN arguments RPAREN",
        "onlyObj",
        4,
        "p_onlyObj_function2",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        331,
    ),
    (
        "withAttr -> ID DOT ID LBRACE ID RBRACE",
        "withAttr",
        6,
        "p_withAttr_accessItem_",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        336,
    ),
    (
        "withAttr -> ID DOT ID LBRACE STRING RBRACE",
        "withAttr",
        6,
        "p_withAttr_accessItem_string",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        342,
    ),
    (
        "withAttr -> ID DOT ID",
        "withAttr",
        3,
        "p_withAttr_id",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        348,
    ),
    (
        "withAttr -> varcontent DOT ID",
        "withAttr",
        3,
        "p_withAttr_varcontent",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        357,
    ),
    (
        "withAttr -> list DOT ID",
        "withAttr",
        3,
        "p_withAttr_list",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        364,
    ),
    (
        "arguments -> <empty>",
        "arguments",
        0,
        "p_arguments_empty",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        370,
    ),
    (
        "arguments -> expression",
        "arguments",
        1,
        "p_arguments_single",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        374,
    ),
    (
        "arguments -> arguments COMMA expression",
        "arguments",
        3,
        "p_arguments_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        378,
    ),
    (
        "list -> LBRACKET listcontent RBRACKET",
        "list",
        3,
        "p_list",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        386,
    ),
    (
        "listcontent -> listcontent COMMA object",
        "listcontent",
        3,
        "p_listcontent_cont",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        393,
    ),
    (
        "listcontent -> object",
        "listcontent",
        1,
        "p_listcontent_obj",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        400,
    ),
    (
        "varcontent -> tolerancetype",
        "varcontent",
        1,
        "p_varcontent_tolerance",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        408,
    ),
    (
        "varcontent -> FLOAT",
        "varcontent",
        1,
        "p_varcontent_float",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        413,
    ),
    (
        "varcontent -> INTEGER",
        "varcontent",
        1,
        "p_varcontent_integer",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        423,
    ),
    (
        "varcontent -> PLUS INTEGER",
        "varcontent",
        2,
        "p_varcontent_integer",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        424,
    ),
    (
        "varcontent -> MINUS INTEGER",
        "varcontent",
        2,
        "p_varcontent_integer",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        425,
    ),
    (
        "varcontent -> STRING",
        "varcontent",
        1,
        "p_varcontent_string",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        441,
    ),
    (
        "varcontent -> SFSTRING",
        "varcontent",
        1,
        "p_varcontent_sfstring",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        447,
    ),
    (
        "options -> WITH optioncontent",
        "options",
        2,
        "p_options_there",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        458,
    ),
    (
        "options -> <empty>",
        "options",
        0,
        "p_options_not_there",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        462,
    ),
    (
        "optioncontent -> optioncontent COMMA optionentry",
        "optioncontent",
        3,
        "p_optioncontent_cont",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        465,
    ),
    (
        "optioncontent -> optionentry",
        "optioncontent",
        1,
        "p_optioncontent_obj",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        470,
    ),
    (
        "optionentry -> DBR IS LPAREN object COMMA object RPAREN",
        "optionentry",
        7,
        "p_optionentry_dbr",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        475,
    ),
    (
        "optionentry -> CHG IS INTEGER",
        "optionentry",
        3,
        "p_optionentry_chg",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        479,
    ),
    (
        "optionentry -> MASSRANGE IS LPAREN object COMMA object RPAREN",
        "optionentry",
        7,
        "p_optionentry_massrange",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        483,
    ),
    (
        "optionentry -> MINOCC IS object",
        "optionentry",
        3,
        "p_optionentry_minocc",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        487,
    ),
    (
        "optionentry -> MAXOCC IS object",
        "optionentry",
        3,
        "p_optionentry_maxocc",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        491,
    ),
    (
        "optionentry -> TOLERANCE IS tolerancetype",
        "optionentry",
        3,
        "p_optionentry_TOLERANCE",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        495,
    ),
    (
        "tolerancetype -> FLOAT DA",
        "tolerancetype",
        2,
        "p_tolerancetype",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        499,
    ),
    (
        "tolerancetype -> FLOAT PPM",
        "tolerancetype",
        2,
        "p_tolerancetype",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        500,
    ),
    (
        "tolerancetype -> INTEGER DA",
        "tolerancetype",
        2,
        "p_tolerancetype",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        501,
    ),
    (
        "tolerancetype -> INTEGER RES",
        "tolerancetype",
        2,
        "p_tolerancetype",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        502,
    ),
    (
        "tolerancetype -> INTEGER PPM",
        "tolerancetype",
        2,
        "p_tolerancetype",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        503,
    ),
    (
        "identification -> IDENTIFY tagname WHERE marks evalMarks suchthat REPORT report",
        "identification",
        8,
        "p_identification_normal_old",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        515,
    ),
    (
        "identification -> IDENTIFY tagname WHERE marks evalMarks REPORT report",
        "identification",
        7,
        "p_identification_normal_old",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        516,
    ),
    (
        "identification -> IDENTIFY marks evalMarks suchthat REPORT report",
        "identification",
        6,
        "p_identification_normal_new",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        558,
    ),
    (
        "identification -> IDENTIFY marks evalMarks REPORT report",
        "identification",
        5,
        "p_identification_normal_new",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        559,
    ),
    (
        "tagname -> ID",
        "tagname",
        1,
        "p_tagname",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        604,
    ),
    (
        "marks -> boolmarks",
        "marks",
        1,
        "p_marks",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        617,
    ),
    (
        "boolmarks -> LPAREN boolmarks RPAREN",
        "boolmarks",
        3,
        "p_booleanterm_paren",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        640,
    ),
    (
        "boolmarks -> NOT boolmarks",
        "boolmarks",
        2,
        "p_boolmarks_not",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        648,
    ),
    (
        "boolmarks -> boolmarks OR boolmarks",
        "boolmarks",
        3,
        "p_boolmarks_or",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        657,
    ),
    (
        "boolmarks -> boolmarks AND boolmarks",
        "boolmarks",
        3,
        "p_boolmarks_and",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        666,
    ),
    (
        "boolmarks -> boolmarks IFA boolmarks",
        "boolmarks",
        3,
        "p_boolmarks_if",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        676,
    ),
    (
        "boolmarks -> boolmarks IFF boolmarks",
        "boolmarks",
        3,
        "p_boolmarks_onlyif",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        686,
    ),
    (
        "boolmarks -> boolmarks ARROW boolmarks",
        "boolmarks",
        3,
        "p_boolmarks_arrow",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        696,
    ),
    (
        "boolmarks -> boolmarks LE boolmarks",
        "boolmarks",
        3,
        "p_boolmarks_le",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        706,
    ),
    (
        "boolmarks -> scan",
        "boolmarks",
        1,
        "p_boolmarks_toScan",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        716,
    ),
    (
        "evalMarks -> <empty>",
        "evalMarks",
        0,
        "p_evalMarks",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        725,
    ),
    (
        "suchthat -> SUCHTHAT body",
        "suchthat",
        2,
        "p_suchthat_single",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        733,
    ),
    (
        "body -> bterm",
        "body",
        1,
        "p_body_bool",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        740,
    ),
    (
        "bterm -> booleanterm",
        "bterm",
        1,
        "p_bterm",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        744,
    ),
    (
        "booleanterm -> booleanterm AND booleanterm",
        "booleanterm",
        3,
        "p_booleanterm_logic",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        860,
    ),
    (
        "booleanterm -> booleanterm OR booleanterm",
        "booleanterm",
        3,
        "p_booleanterm_logic",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        861,
    ),
    (
        "booleanterm -> LPAREN booleanterm RPAREN",
        "booleanterm",
        3,
        "p_booleanterm_brackets",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        872,
    ),
    (
        "booleanterm -> NOT booleanterm",
        "booleanterm",
        2,
        "p_booleanterm_not",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        883,
    ),
    (
        "booleanterm -> expr",
        "booleanterm",
        1,
        "p_booleanterm_expr",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        894,
    ),
    (
        "booleanterm -> object",
        "booleanterm",
        1,
        "p_booleanterm_expression",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        905,
    ),
    (
        "expr -> expression EQUALS expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        916,
    ),
    (
        "expr -> expression GT expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        917,
    ),
    (
        "expr -> expression GE expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        918,
    ),
    (
        "expr -> expression LE expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        919,
    ),
    (
        "expr -> expression LT expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        920,
    ),
    (
        "expr -> expression NE expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        921,
    ),
    (
        "expr -> expression ARROWR expression options",
        "expr",
        4,
        "p_expr_multi",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        922,
    ),
    (
        "expression -> expression PLUS expression",
        "expression",
        3,
        "p_expression_struct",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        933,
    ),
    (
        "expression -> expression MINUS expression",
        "expression",
        3,
        "p_expression_struct",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        934,
    ),
    (
        "expression -> expression TIMES expression",
        "expression",
        3,
        "p_expression_struct",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        935,
    ),
    (
        "expression -> expression DIVIDE expression",
        "expression",
        3,
        "p_expression_struct",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        936,
    ),
    (
        "expression -> MINUS expression",
        "expression",
        2,
        "p_expression_struct",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        937,
    ),
    (
        "expression -> LPAREN expression RPAREN LBRACE ID RBRACE",
        "expression",
        6,
        "p_expression_attribute",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        952,
    ),
    (
        "expression -> LPAREN expression RPAREN",
        "expression",
        3,
        "p_expression_paren",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        965,
    ),
    (
        "expression -> object",
        "expression",
        1,
        "p_expression_content",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        969,
    ),
    (
        "scan -> object IN scope options",
        "scan",
        4,
        "p_scan_object",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        985,
    ),
    (
        "scope -> MS1 MINUS",
        "scope",
        2,
        "p_scope",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1044,
    ),
    (
        "scope -> MS1 PLUS",
        "scope",
        2,
        "p_scope",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1045,
    ),
    (
        "scope -> MS2 PLUS",
        "scope",
        2,
        "p_scope",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1046,
    ),
    (
        "scope -> MS2 MINUS",
        "scope",
        2,
        "p_scope",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1047,
    ),
    (
        "report -> reportContent",
        "report",
        1,
        "p_report",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1052,
    ),
    (
        "reportContent -> reportContent rContent",
        "reportContent",
        2,
        "p_reportContent_cont",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1056,
    ),
    (
        "reportContent -> rContent",
        "reportContent",
        1,
        "p_reportContent_single",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1061,
    ),
    (
        "rContent -> ID IS STRING PERCENT STRING SEMICOLON",
        "rContent",
        6,
        "p_rContent",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1065,
    ),
    (
        "rContent -> ID IS STRING PERCENT LPAREN arguments RPAREN SEMICOLON",
        "rContent",
        8,
        "p_rContent",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1066,
    ),
    (
        "rContent -> ID IS expression SEMICOLON",
        "rContent",
        4,
        "p_rContent",
        "D:\\tmp\\LipidXplorer-1.2.7\\lx\\mfql\\mfqlParser.py",
        1067,
    ),
]
